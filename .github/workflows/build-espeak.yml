name: Add espeak.zip to created release

on:
    workflow_call:
        inputs:
            matrix:
                required: true
                type: array

jobs:
    build:
        name: ${{ matrix.bin }}
        strategy:
            fail-fast: false
            matrix: ${{ fromJson(inputs.matrix) }}

        runs-on: ${{ matrix.platform }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Linux arm64 toolchain
              run: |
                  sudo apt-get install g++-aarch64-linux-gnu
                  echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-g++" >> $GITHUB_ENV
                  echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
                  echo "CXX=aarch64-linux-gnu-g++" >> $GITHUB_ENV
              if: matrix.bin == 'linux-arm64.tar.gz'

            - name: Build binaries
              run: |
                  git clone --single-branch --depth 1 -b 1.52.0 https://github.com/espeak-ng/espeak-ng
                  chmod +x build_espeak.sh
                  ./build_espeak.sh
                  mkdir -p espeak
                  mv ./espeak-ng.bin espeak/${{ matrix.bin }}
              shell: bash
              env:
                  EXTRA_CMAKE_ARGS: ${{ matrix.extra-cmake-args }}

            - name: Upload binaries as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: binaries-${{ matrix.bin }}
                  path: espeak

    finalize:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download all artifacts
              run: |
                  mkdir -p espeak
                  for artifact in $(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts --jq '.artifacts[].name'); do
                      echo "Downloading artifact: $artifact"
                      gh run download --name $artifact --dir ./espeak
                  done
                  echo "All binaries are now in ./espeak"
                  ls -R ./espeak
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              shell: bash

            - name: Include espeak-ng-data
              run: |
                  cd espeak
                  git clone --single-branch --depth 1 -b 1.52.0 https://github.com/espeak-ng/espeak-ng
                  cd espeak-ng
                  rm -rf build
                  cmake -B build . -DCMAKE_INSTALL_PREFIX=_espeak_ng_data -DCOMPILE_INTONATIONS=ON
                  cmake --build build
                  cmake --install build
                  cd ..
                  mv espeak-ng/_espeak_ng_data/share/espeak-ng-data ./espeak-ng-data
                  rm -rf espeak-ng
              shell: bash

            - name: Zip and upload to release
              run: |
                  wget -O espeak/LICENSE https://raw.githubusercontent.com/espeak-ng/espeak-ng/master/COPYING
                  zip -r espeak-ng-binaries-v1.52.zip espeak
                  gh release upload ${{ github.event.workflow_call.head_branch }} espeak-ng-binaries-v1.52.zip --clobber
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              shell: bash
